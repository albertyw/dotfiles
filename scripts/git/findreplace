#!/bin/bash

set -euo pipefail
IFS=$'\n\t'

location=${GIT_PREFIX:-./}
search="${1:-}"
replace="${2:-}"

if [ -z "$search" ] || [ -z "$replace" ]; then
    echo "Find and replace strings in version controlled files"
    echo "Usage: git findreplace \$searchterm \$replacement"
    exit 1
fi

escaped_search=$(printf '%s\n' "$search" | sed -e 's/[]\/$*.^[]/\\&/g');
escaped_replace=$(printf '%s\n' "$replace" | sed -e 's/[]\/$*.^[]/\\&/g');

sed2() {
    file="$1"
    echo "$file"
    if [[ $(uname) == Darwin ]]; then
        sed -i '' -e "s/$escaped_search/$escaped_replace/g" "$file"
    else
        sed -i -e "s/$escaped_search/$escaped_replace/g" "$file"
    fi
}

files="$(git grep -l "$search" "$location")"
pids=();
for file in $files; do
    sed2 "$file" &
    pids+=($!)
done

for pid in ${pids[*]}; do
    wait "$pid"
done
