#!/bin/bash

### Setting variables
export EDITOR=vim
export LANG="en_US"
export LC_ALL=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export TERM=xterm-256color
export HISTCONTROL=ignorespace
export CLICOLOR=1
export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx

# Set bash prompt
blue='\[\e[1;34m\]'
red='\[\e[1;31m\]'
yellow='\[\e[1;33m\]'
magentabackground='\[\e[1;45m\]'
reset='\[\e[0m\]'
if [[ "$(hostname)" == *"personal"* ]] || [[ "$(uname)" == "Darwin" ]] || [[ "$(hostname)" == *"desktop"* ]]; then
    PS1="${blue}\u${red}@\[${yellow}\h${red} \w \$ ${reset}"
else
    PS1="${blue}\u${red}@\[${yellow}${magentabackground}\h${reset}${red} \w \$ ${reset}"
fi

### Assorted aliases
function path() { echo "$PATH" | tr ':' '\n'; }
alias grep='grep --color=auto'
oports() { echo 'User:      Command:   Port:'; echo '----------------------------' ; lsof -i 4 -P -n | grep -i 'listen' | awk '{print $3, $1, $9}' | sed 's/ [a-z0-9\.\*]*:/ /' | sort -k 3 -n |xargs printf '%-10s %-10s %-10s\n' | uniq; }
alias mem="printf '\033[?7l' && ps aux | sed -n 1p && ps aux | sort -b -n -k 4 | tail -n 30 && printf '\033[?7h'"
alias cpu="printf '\033[?7l' && ps aux | sed -n 1p && ps aux | sort -b -n -k 3 | tail -n 30 && printf '\033[?7h'"
alias sudo='sudo '
alias fucking='sudo'
alias hardware='hardware.sh'
alias scp="rsync"
alias rsync='rsync -vazhP'
alias alert='echo -e "\a"'
alias diff='icdiff'
alias tree='tree -C'
alias du='du -h'
alias mkdir='mkdir -p'
alias myip='curl --silent https://ipinfo.io | jq -r .ip'
alias myipv6='curl https://api6.ipify.org'
function geoip { curl "https://ipinfo.io/$1"; }
export -f geoip
if [[ $(uname) == Linux ]]; then
    alias ls='ls --color=always'
fi
alias serve="python3 -m http.server"
alias realpath='python -c "import os, sys; print(os.path.realpath(sys.argv[1]))"'
alias gosymlink='cd "$(realpath "$(pwd)")"'
alias portgrep="sudo ngrep -d any port"
alias apt-get="apt"
timesync() { timedatectl set-ntp false; timedatectl set-ntp true; }
if [[ $(uname) == Linux ]]; then
    alias portlist="sudo netstat -lntup"
elif [[ $(uname) == Darwin ]]; then
    alias portlist="sudo lsof -i -P | grep -i 'listen'"
    if [ -f /usr/local/bin/vim ]; then
        alias vi=/usr/local/bin/vim
    fi
fi

### Adjusting the PATH
export PATH="$PATH:$HOME/.dotfiles/bin"
# export PATH="$PATH:/usr/local/heroku/bin"

# Python
python3location="$(command which python3)"
export VIRTUALENVWRAPPER_PYTHON=$python3location
export PATH="/usr/local/opt/python/libexec/bin:$PATH" # Read brew python, needed for virtualenvwrapper
[ -s "/usr/local/bin/virtualenvwrapper.sh" ] && . /usr/local/bin/virtualenvwrapper.sh
source "$HOME/.dotfiles/files/completion/django-completion.sh"

# Do not pip install when not in a virtual environment
# https://docs.python-guide.org/dev/pip-virtualenv/#requiring-an-active-virtual-environment-for-pip
export PIP_REQUIRE_VIRTUALENV=true

# Go
export GOPATH=$HOME/gocode
export PATH="$PATH:$GOPATH/bin"

# Node
export PATH="$PATH:node_modules/.bin"
export NODE_OPTIONS=--max_old_space_size=4096
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
if command -v npm > /dev/null; then source <(npm completion); fi
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Ruby
export PATH="$PATH:$HOME/.rvm/bin"                    # Add RVM to PATH for scripting
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
if command -v rbenv > /dev/null; then eval "$(rbenv init -)"; fi
alias rspec='xvfb-run -a bundle exec rspec'

[[ -r $HOME/.bashrc_local ]] && . ~/.bashrc_local
[[ -r /Users/albertyw/.profile_lda ]] && . /Users/albertyw/.profile_lda

### Git updates
~/.dotfiles/scripts/chmod-private-keys.sh
~/.dotfiles/scripts/sync-dotfiles.sh &
disown
